<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure DevOps on DevJev.nl | Azure, Cloud Security &amp; DevOps Insights for IT Professionals</title>
    <link>https://www.devjev.nl/categories/azure-devops/</link>
    <description>Recent content in Azure DevOps on DevJev.nl | Azure, Cloud Security &amp; DevOps Insights for IT Professionals</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 22 Aug 2024 02:00:00 +0200</lastBuildDate>
    <atom:link href="https://www.devjev.nl/categories/azure-devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>üöÄ Quickly Find Your Azure DevOps Project Id üîç</title>
      <link>https://www.devjev.nl/posts/2024/quickly-find-your-azure-devops-project-id/</link>
      <pubDate>Thu, 22 Aug 2024 02:00:00 +0200</pubDate>
      <guid>https://www.devjev.nl/posts/2024/quickly-find-your-azure-devops-project-id/</guid>
      <description>&lt;p&gt;With this post I want to share a lazy and a hacky way for finding the Azure DevOps &lt;code&gt;Project Id&lt;/code&gt; of any project in your Azure DevOps Organization.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-lazy-api-query&#34;&gt;The lazy API query&lt;/h2&gt;&#xA;&lt;p&gt;It can feel a bit daunting to start using Azure DevOps API. But what most folks are not aware of is that data retrieval API&amp;rsquo;s can be queried using&#xA;your favorite browser.&#xA;To get the &lt;code&gt;Project Id&lt;/code&gt; we can do this with the projects &lt;code&gt;LIST&lt;/code&gt; and &lt;code&gt;GET&lt;/code&gt; API&amp;rsquo;s.&lt;/p&gt;</description>
    </item>
    <item>
      <title>üõ†Ô∏è How to Build and Use Your Own Container with Azure DevOps Container Jobs üöÄüì¶</title>
      <link>https://www.devjev.nl/posts/2024/how-to-build-and-use-your-own-container-with-azure-devops-container-jobs/</link>
      <pubDate>Fri, 23 Feb 2024 02:00:00 +0200</pubDate>
      <guid>https://www.devjev.nl/posts/2024/how-to-build-and-use-your-own-container-with-azure-devops-container-jobs/</guid>
      <description>&lt;p&gt;In my previous post &lt;a href=&#34;https://www.devjev.nl/posts/2024/azure-devops-container-jobs-when-microsoft-and-self-hosted-agents-meet-its-the-best-of-both-worlds&#34; rel=&#34;&#34;&gt;üöÄ Azure DevOps Container Jobs: When Microsoft and Self-Hosted Agents meet, It&amp;rsquo;s the Best of Both Worlds! üåêüõ†Ô∏è&lt;/a&gt;&#xA; you where able experience Azure DevOps container jobs. In this post I am delivering on my promise and explain set-by-step how to build and use your own container with Azure DevOps Container Jobs. Buckle up, and let&amp;rsquo;s get started!&lt;/p&gt;&#xA;&lt;h2 id=&#34;target-set-up&#34;&gt;Target set-up&lt;/h2&gt;&#xA;&lt;p&gt;Lets start by having a look at the target set-up.&lt;/p&gt;</description>
    </item>
    <item>
      <title>üöÄ Azure DevOps Container Jobs: When Microsoft and Self-Hosted Agents meet, It&#39;s the Best of Both Worlds! üåêüõ†Ô∏è</title>
      <link>https://www.devjev.nl/posts/2024/azure-devops-container-jobs-when-microsoft-and-self-hosted-agents-meet-its-the-best-of-both-worlds/</link>
      <pubDate>Tue, 13 Feb 2024 02:00:00 +0200</pubDate>
      <guid>https://www.devjev.nl/posts/2024/azure-devops-container-jobs-when-microsoft-and-self-hosted-agents-meet-its-the-best-of-both-worlds/</guid>
      <description>&lt;p&gt;Did you know that you can run your Azure DevOps pipeline jobs in a container? It&amp;rsquo;s a great way to combine the benefits of Microsoft Hosted Agents and Self-Hosted Agents. In this post, I will explain what Azure DevOps Container Jobs are and how you can use them to your advantage. But first, a recap of Microsoft Hosted Agents and Self-Hosted Agents.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-are-microsoft-hosted-agents&#34;&gt;What are Microsoft Hosted Agents&lt;/h2&gt;&#xA;&lt;p&gt;Microsoft Hosted Agents are a type of agent in Azure DevOps that are hosted and managed by Microsoft. These agents are pre-configured with certain software depending upon the type of agent (Windows, macOS, or Linux) which can run jobs targeting different platforms. With Microsoft Hosted Agents you trade off control for convenience as they are an excellent choice if you need to quickly scale your operations without worrying about the underlying infrastructure management.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Your service connection credentials are mine</title>
      <link>https://www.devjev.nl/posts/2022/your-service-connection-credentials-are-mine/</link>
      <pubDate>Sat, 12 Mar 2022 21:00:00 +0100</pubDate>
      <guid>https://www.devjev.nl/posts/2022/your-service-connection-credentials-are-mine/</guid>
      <description>&lt;p&gt;Like with the two previous posts &lt;a href=&#34;https://www.devjev.nl/posts/2022/hacking-azure-devops&#34; rel=&#34;&#34;&gt;Hacking Azure DevOps&lt;/a&gt;&#xA; and &lt;a href=&#34;https://www.devjev.nl/posts/2022/i-am-in-your-pipeline-reading-all-your-secrets&#34; rel=&#34;&#34;&gt;I am in your pipeline reading all your secrets!&lt;/a&gt;&#xA; I want to continue to raise awareness and understanding about pipeline security in Azure DevOps. In the previous post I have explained how secure / marked as secret variables are handled during pipeline runtime.&lt;br&gt;&#xA;In this post I want to show how an Azure Resource Manager service connection configuration is handled during pipeline runtime. And which sensitive information is exposed through this service connection.&lt;br&gt;&#xA;Like I mentioned in the  previous posts, without proper security configuration for pipelines this information could be abused by attackers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>I am in your pipeline reading all your secrets!</title>
      <link>https://www.devjev.nl/posts/2022/i-am-in-your-pipeline-reading-all-your-secrets/</link>
      <pubDate>Sun, 30 Jan 2022 08:00:00 +0100</pubDate>
      <guid>https://www.devjev.nl/posts/2022/i-am-in-your-pipeline-reading-all-your-secrets/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;With this blog post I want to raise awareness and understanding on how secure / marked as secret variables are handled during pipeline runtime in Azure DevOps and how these can be potentially exfiltrated. If proper security configuration is not in place this could potentially be abused by attackers.&lt;/p&gt;&#xA;&lt;p&gt;Lets move ahead to create different types of variables and try to retrieve their values. By doing so at the end of this blog post it will be clear why it&amp;rsquo;s not very sensible to give all project team members full access to pipelines. And why in some cases it&amp;rsquo;s better to set-up private build agents.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hacking Azure DevOps</title>
      <link>https://www.devjev.nl/posts/2021/hacking-azure-devops/</link>
      <pubDate>Wed, 19 May 2021 12:00:00 +0200</pubDate>
      <guid>https://www.devjev.nl/posts/2021/hacking-azure-devops/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;While this case is not a particularly new one and has been posted by Matt Cooper on &lt;a href=&#34;https://devblogs.microsoft.com/devops/pipeline-stealing-another-repo/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreffer&#34;&gt;devblogs.microsoft.com&lt;/a&gt;&#xA; back in August 2020. I still feel that in relation to the possible data spillage it has not received sufficient exposure and the correct amount of awareness I would have expected. I actually stumbled upon this case by accident when playing with the Azure DevOps Library variables API.&lt;/p&gt;&#xA;&lt;p&gt;So in this post I want to showcase how a possible attacker can use a compromised developers environment to gain access to almost all the data present in an Azure DevOps Organization. While access of the developers environment in question is limited to just a single Azure DevOps Project.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitHub vs Azure DevOps</title>
      <link>https://www.devjev.nl/posts/2020/github-vs-ado/</link>
      <pubDate>Fri, 06 Nov 2020 13:00:00 +0200</pubDate>
      <guid>https://www.devjev.nl/posts/2020/github-vs-ado/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Recently one of our clients has asked if it might be worthwhile to look into GitHub. They are currently using Azure DevOps and are as far as I understand quite happy with it. So, I drew up a short summary of pro&amp;rsquo;s and cons about GitHub vs Azure DevOps. The response that I got was very enthusiastic. And because of it I decided to share this information here.&lt;/p&gt;&#xA;&lt;p&gt;Keep in mind that this is not a full in depth comparison of both products but more of a management summary intended to decide if it would be valuable to look into what GitHub can offer a company that is currently using Azure DevOps.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Set by step guide for a free and easy way to set up a low maintenance blog</title>
      <link>https://www.devjev.nl/posts/2020/free-blog-with-ado-and-github-pages/</link>
      <pubDate>Thu, 10 Sep 2020 18:42:15 +0200</pubDate>
      <guid>https://www.devjev.nl/posts/2020/free-blog-with-ado-and-github-pages/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;I always struggled with the following; when I find a solution for a certain problem and months down the line I run into a similar problem and try to remember how I solved the previous one. Cursing at myself: Why didn&amp;rsquo;t I write this down!? Like many other IT professionals I created a blog (years ago) to write those solutions down for myself and anyone who stumbles upon the blog. But unfortunately my blog at that time has followed the trend of the general population of IT related blogs. It withered away due to the lack of attention from yours truly.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
